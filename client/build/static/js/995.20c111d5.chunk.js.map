{"version":3,"file":"static/js/995.20c111d5.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ArrowBack.js","../node_modules/@mui/icons-material/esm/Delete.js","components/ViewEmail.jsx","constants/constant.jsx","services/api.js","hooks/useApi.jsx","services/api.urls.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\r\nimport { useOutletContext,useLocation } from \"react-router-dom\";\r\nimport { Box, styled, Typography } from \"@mui/material\";\r\nimport { ArrowBack, Delete } from \"@mui/icons-material\";\r\nimport { emptyProfilePic } from \"../constants/constant\";\r\nimport useApi from \"../hooks/useApi\";\r\nimport { API_URLS } from \"../services/api.urls\";\r\n\r\nconst IconWrapper = styled(Box)({\r\n    padding:15\r\n})\r\nconst Subject = styled(Typography)({\r\n    fontSize:22,\r\n    margin:'10px 0 20px 75px',\r\n    display:'flex'\r\n})\r\nconst Indicator = styled(Box)({\r\n   fontSize:12,\r\n   background:'#ddd',\r\n   color:'#222',\r\n   padding:'2px 4px',\r\n   marginLeft:6,\r\n   borderRadius:4,\r\n   alignSelf:'center'\r\n})\r\nconst Container = styled(Box)({\r\n   marginLeft:15,\r\n   width:'100%',\r\n   '& > div':{\r\n    display:'flex',\r\n    '& > p > span':{\r\n        fontSize:12,\r\n        color:'#5E5E5E'\r\n     }\r\n   }\r\n})\r\n\r\nconst Date = styled(Box)({\r\n    margin:'0 50px 0 auto !important',\r\n    fontSize:12,\r\n    color:'#5E5E5E'\r\n})\r\n\r\nconst Image = styled('img')({\r\n    borderRadius:'50%',\r\n    width:40,\r\n    height:40,\r\n    margin:'5px 10px 0 10px',\r\n    background:'#cccccc'\r\n})\r\n\r\nconst ViewEmail = ()=>{\r\n\r\n    const {openDrawer} = useOutletContext();\r\n\r\n    const { state } = useLocation();\r\n    const { email } = state;\r\n\r\n    const moveEmailsToBinService = useApi(API_URLS.moveEmailsToBin); \r\n\r\n    const deleteEmail =()=>{\r\n        moveEmailsToBinService.call([email._id]);\r\n        window.history.back();\r\n    }\r\n    return(\r\n     <Box style={openDrawer ? {marginLeft:250} : {width:'100%'}} >\r\n        <IconWrapper>\r\n         <ArrowBack onClick={()=> window.history.back()} color=\"action\" fontSize=\"small\" />\r\n            <Delete fontSize=\"small\" color=\"action\" style={{ marginLeft:40}} onClick={()=> deleteEmail()}/>\r\n        </IconWrapper>\r\n        <Subject>\r\n          {email.Subject} <Indicator component='span'>Inbox</Indicator>\r\n        </Subject>\r\n        <Box style={{display:'flex'}}>\r\n         <Image src={emptyProfilePic} alt=\"dp\" />\r\n         <Container>\r\n            <Box>\r\n                <Typography style={{marginTop:10}}>{email.name}\r\n                <Box component='span'>&nbsp;&#60;{email.to}&#62;</Box>\r\n                </Typography>\r\n                <Date>\r\n                {(new window.Date(email.date)).getDate()}&nbsp;\r\n                {(new window.Date(email.date)).toLocaleString('default',{month:'long'})}&nbsp;\r\n                {(new window.Date(email.date)).getFullYear()}\r\n                </Date>\r\n            </Box>\r\n            <Typography style={{marginTop:20}}>{email.body}</Typography>\r\n          </Container>\r\n        </Box>\r\n    </Box>\r\n    )\r\n}\r\nexport default ViewEmail;","export const gmailLogo = 'https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r5.png'\r\nexport const emptyProfilePic = 'https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png'\r\n\r\n\r\nexport const EMPTY_TABS = {\r\n    inbox: {\r\n        heading: 'Your inbox is empty',\r\n        subHeading: \"Mails that don't appear in other tabs will be shown here.\"\r\n    },\r\n    drafts: {\r\n        heading: \"You don't have any saved drafts.\",\r\n        subHeading: \"Saving a draft allows you to keep a message you aren't ready to send yet.\"\r\n    },\r\n    starred: {\r\n        heading: 'No starred messages',\r\n        subHeading: \"Stars let you give messages a special status to make them easier to find. To star a message, click on the star outline beside any message or conversation.\"\r\n    },\r\n    sent: {\r\n        heading: 'No sent messages!',\r\n        subHeading: 'Send one now!'\r\n    },\r\n    bin: {\r\n        heading: 'No conversations in Bin.',\r\n        subHeading: ''\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst API_URL = \"\";\r\n\r\nconst API_GMAIL = async (urlObject, payload, type) => {\r\n  return await axios({\r\n    method: urlObject.method,\r\n    url: `${API_URL}/${urlObject.endpoint}/${type}`,\r\n    data: payload,\r\n  });\r\n};\r\nexport default API_GMAIL;\r\n","import { useState } from 'react';\r\nimport API from '../services/api';\r\n\r\nconst useApi = (urlObject)=>{\r\n\r\n    const [response,setResponse] = useState(null);\r\n    const [error,setError] = useState(\"\");\r\n    const [isLoading,setIsLoading] = useState(false);\r\n\r\n\r\n    const call = async (payload,type = '' )=>{\r\n        setResponse(null);\r\n        setError(\"\");\r\n        setIsLoading(true);\r\n        try{\r\n           let res = await API(urlObject , payload, type);\r\n           setResponse(res.data);\r\n        } catch(error){\r\n           setError(error.message)\r\n        } finally{\r\n           setIsLoading(false);\r\n        }\r\n    }\r\n      \r\n    return { call,response,error,isLoading };\r\n\r\n}\r\n\r\n\r\nexport default useApi;","export const API_URLS = {\r\n  saveSentEmail: {\r\n    endpoint: \"save\",\r\n    method: \"POST\",\r\n  },\r\n  getEmailFromType: {\r\n    endpoint: \"emails\",\r\n    method: \"GET\",\r\n  },\r\n  saveDraftEmails: {\r\n    endpoint: \"save-draft\",\r\n    method: \"POST\",\r\n  },\r\n  moveEmailsToBin: {\r\n    endpoint: \"bin\",\r\n    method: \"POST\",\r\n  },\r\n  toggleStarredEmail: {\r\n    endpoint: \"starred\",\r\n    method: \"POST\",\r\n  },\r\n  deleteEmail: {\r\n    endpoint: \"delete\",\r\n    method: \"DELETE\",\r\n  },\r\n};\r\n"],"names":["createSvgIcon","_jsx","d","IconWrapper","styled","Box","padding","Subject","Typography","fontSize","margin","display","Indicator","background","color","marginLeft","borderRadius","alignSelf","Container","width","Date","Image","height","ViewEmail","openDrawer","useOutletContext","state","useLocation","email","moveEmailsToBinService","useApi","API_URLS","moveEmailsToBin","_jsxs","style","children","ArrowBack","onClick","window","history","back","Delete","call","_id","component","src","emptyProfilePic","alt","marginTop","name","to","date","getDate","toLocaleString","month","getFullYear","body","gmailLogo","EMPTY_TABS","inbox","heading","subHeading","drafts","starred","sent","bin","async","urlObject","payload","type","axios","method","url","endpoint","data","response","setResponse","useState","error","setError","isLoading","setIsLoading","arguments","length","undefined","res","API","message","saveSentEmail","getEmailFromType","saveDraftEmails","toggleStarredEmail","deleteEmail"],"sourceRoot":""}